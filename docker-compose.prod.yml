

services:

  cache:
    image: 'redis:latest'
    container_name: support_cache
    

  
  database:
    image: 'postgres:14'
    container_name: support_database
    env_file:
      - '.env'
    volumes:
      - 'pg_data:/var/lib/postgresql/data'
    
  api: &api_base
    build:
      context: .
      dockerfile: Dockerfile
    image: support_api
    container_name: api
    ports:
      - '8000:8000'
    env_file:
      - ".env"
    depends_on:
      - database
      - broker
    volumes:
      - ./:/app/

  worker:
    <<: *api_base
    container_name: support_worker
    ports: []
    entrypoint: bash
    command: -c "watchmedo auto-restart --pattern='*.py' --recursive -- celery -A src.mailing.celery_app worker --pool threads --loglevel=INFO"

  broker:
    image: rabbitmq:3-management-alpine
    container_name: support_broker
    hostname: rabbitmq
    ports:
      - 15672:15672
    env_file:
      - ".env"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  mailing:
    image: mailhog/mailhog:latest
    container_name: support_mailing
    env_file: ".env"
    ports:
      - "8025:8025"


volumes:
  pg_data: {}
  rabbitmq-data: 
