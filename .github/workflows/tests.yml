name: Run Tests and Report Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}


      - name: Install Poetry
        uses: snok/install-poetry@v1


      - name: Install dependencies
        run: poetry install

      - name: Create .test.env file for CI
        run: |
          echo "MODE=TEST" >> .test.env
          echo "POSTGRES_HOST=localhost" >> .test.env
          echo "POSTGRES_PORT=5432" >> .test.env
          echo "POSTGRES_USER=postgres" >> .test.env
          echo "POSTGRES_PASSWORD=postgres" >> .test.env
          echo "POSTGRES_DB=test_db_jss" >> .test.env
          echo "SECRET_KEY=test_secret_for_ci" >> .test.env
          echo "ALGORITHM=HS256" >> .test.env
          echo "REDIS_HOST=localhost" >> .test.env
          echo "REDIS_PORT=6379" >> .test.env
          echo "OPENAI_API_KEY=fake_key_for_ci" >> .test.env



      - name: Run tests and generate coverage report
        run: poetry run pytest --cov=src --cov-report=xml


      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
